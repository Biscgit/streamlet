# pylint: skip-file
"""Generate documentation for all modules and validators in Streamlet."""

import logging

from voluptuous.validators import _WithSubValidators

from core.settings import Settings

logging.basicConfig(level=logging.INFO)


def type_map(value):
    if hasattr(value, "__name__") and v.__name__ == "Boolean":
        return "Boolean"
    if isinstance(value, _WithSubValidators):
        return f"{value.__class__.__name__}[{", ".join(map(str, value.validators))}]"

    return value


def single_setting(key, annotation):
    default = getattr(Settings, key)

    # handle key because of dynamic datetime function
    if key == "celery_beat_file":  #
        default = "/tmp/streamlet_beat-<TIMESTAMP>"

    return f"""
- `{key}`:

    **Type:** {type_map(annotation)}
    
    **Default:** {default} [type: {default.__class__.__name__}]

"""


if __name__ == "__main__":
    logging.info("Starting...")

    with open("./docs/SETTINGS.md", "w") as f:
        logging.info("Generating and writing documentation...")

        f.write("*This file is automatically generated.*\n\n# Settings")

        for k, v in Settings.__annotations__.items():
            f.write(single_setting(k, v))

    logging.info("Documentation generated.")
